name: Github Packages UI Library Actions

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install dependencies using npm install instead of npm ci
      - name: Install dependencies
        run: npm install

      - run: npm test

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # âœ… Allows GitHub Actions to push commits
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      # Install dependencies using npm install instead of npm ci
      - name: Install dependencies
        run: npm install

      - run: npm run build

      # Set Git user and email for versioning and pushing changes
      - name: Set Git user and email
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Increment the version number using `npm version`
      - name: Bump version
        run: |
          npm version patch --no-git-tag-version
          echo "New version: $(node -p "require('./package.json').version")"

      # Publish the package to GitHub Packages
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HALALTOKEN }}

      # Push the updated version to the repository
      - name: Push Changes
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/yuosif1286/github-package-ui-library.git
          git add package.json
          git commit -m "Bump version to $(node -p "require('./package.json').version") [skip ci]"
          git push origin main --follow-tags